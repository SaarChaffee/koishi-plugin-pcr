name: Publish

on:
  workflow_call:
    secrets:
      NPM_TOKEN:
        required: true
        description: 'NPM token'
  push:
    branches:
      - master

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: master

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Get Yarn Cache Directory Path
        id: yarn-cache-dir-path
        shell: bash
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Cache Dependencies
        id: cache-yarn
        uses: actions/cache@v4
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        shell: bash
        run: |
          yarn

      - name: Get Datas
        run: |
          npm pack koishi-plugin-pcr-landosol-roster
          tar -zxvf koishi-plugin-pcr-landosol-roster-*.tgz \
          -C 'packages/landosol-roster/data' \
          --strip-components=2 \
          'package/data/chara_name.json' \
          'package/data/chara_profile.json' \
          'package/data/unavailable_chara.json'
          ls -alF packages/landosol-roster/data

      - name: Get Hash
        id: current-hash
        run: |
          echo "chara_name=$(sha256sum packages/landosol-roster/data/chara_name.json | awk '{print $1}')" >> $GITHUB_OUTPUT
          echo "chara_profile=$(sha256sum packages/landosol-roster/data/chara_profile.json | awk '{print $1}')" >> $GITHUB_OUTPUT
          echo "unavailable_chara=$(sha256sum packages/landosol-roster/data/unavailable_chara.json | awk '{print $1}')" >> $GITHUB_OUTPUT

      - name: Create Folder
        run: mkdir LandosolRoster

      - name: Get Landosol Roster Data
        uses: actions/checkout@v4
        with:
          repository: 'Ice9Coffee/LandosolRoster'
          path: 'LandosolRoster'

      - name: Get Landosol Roster Data Hash
        id: remote-hash
        run: |
          echo "chara_name=$(sha256sum LandosolRoster/chara_name.json | awk '{print $1}')" >> $GITHUB_OUTPUT
          echo "chara_profile=$(sha256sum LandosolRoster/chara_profile.json | awk '{print $1}')" >> $GITHUB_OUTPUT
          echo "unavailable_chara=$(sha256sum LandosolRoster/unavailable_chara.json | awk '{print $1}')" >> $GITHUB_OUTPUT

      - name: CAS Chara Name
        if: steps.current-hash.outputs.chara_name != steps.remote-hash.outputs.chara_name
        run: cp LandosolRoster/chara_name.json packages/landosol-roster/data/chara_name.json

      - name: CAS Chara Profile
        if: steps.current-hash.outputs.chara_profile != steps.remote-hash.outputs.chara_profile
        run: cp LandosolRoster/chara_profile.json packages/landosol-roster/data/chara_profile.json

      - name: CAS Unavailable Name
        if: teps.current-hash.outputs.unavailable_name != steps.remote-hash.outputs.unavailable_name
        run: cp LandosolRoster/unavailable_name.json packages/landosol-roster/data/unavailable_name.json

      - name: Build
        run: |
          (yarn build 2>&1) | tee build.log
          exit ${PIPESTATUS[0]}

      - name: Set NPM Token
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Publish
        run: yarn pub --debug

      - name: Create Result Markdown
        if: ${{ success() || failure() }}
        run: |
          tee -a output.md <<EOF
          ### Publish $([ "${{ job.status }}" = 'success' ] && echo "✅" || echo "❌")

          <details>
            <summary>Details</summary>

            \`\`\`shell
            $(cat build.log)
            \`\`\`
          </details>

          EOF

      - name: Upload Publish Log
        if: ${{ success() || failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: output.md
